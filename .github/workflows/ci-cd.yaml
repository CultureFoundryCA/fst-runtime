name: Run Tests and Publish on Release

on:
  pull_request:
    branches:
      - main
  release:
    types:
      - published

permissions:
  contents: read

jobs:

  # Pytest job
  pytest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run pytest
        run: |
          poetry run pytest

  # Pylint job
  pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run pylint
        run: |
          poetry run pylint $(git ls-files '*.py')

  # Pyright job
  pyright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run pyright
        run: |
          poetry run pyright

  # Publish job (only runs on release)
  publish:
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    needs: [pytest, pylint, pyright]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Build the package
        run: |
          poetry build

      - name: Publish to PyPI
        env:
          PUBLISHING_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish --username __token__ --password $PUBLISHING_TOKEN
